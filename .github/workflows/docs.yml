<<<<<<< HEAD

name: Documentation
on:
  push:
    branches: [master]
  pull_request:
    branches: [master]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install -y build-essential sudo git wget curl python3-sphinx rsync

          # install sugar-toolkit-gtk3 dependencies
          sudo apt install -y python-all-dev python3-all-dev libgtk-3-dev
          sudo apt install -y libgdk-pixbuf2.0-dev libsm-dev libice-dev librsvg2-dev
          sudo apt install -y libxfixes-dev libxi-dev libx11-dev gettext intltool
          sudo apt install -y libxml-parser-perl x11proto-core-dev libasound2-dev
          sudo apt install -y libgirepository1.0-dev linux-libc-dev gir1.2-sugarext-1.0

          # install python3 dependencies
          sudo apt install -y gir1.2-webkit2-4.1 python3-six python3-decorator
          sudo apt install -y python3-dateutil python3-gi-cairo gir1.2-telepathyglib-0.12

      - uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Create builduser
        run: |
          # A user is required so that the docs are not built as root
          sudo useradd builduser -m # Create the builduser
          sudo passwd -d builduser # Delete the buildusers password
          printf 'builduser ALL=(ALL) ALL\n' | sudo tee -a /etc/sudoers

      - name: Build documentation
        run: |
          sudo chown builduser:builduser . -R
          sudo -u builduser ./ci/docs.sh

      - name: Deploy ðŸš€
        uses: JamesIves/github-pages-deploy-action@4.0.0
        # build the documentation, but only deploy them when the PR
        # gets merged
        if: github.ref == 'refs/heads/master'
        with:
          branch: gh-pages # The branch the action should deploy to.
          folder: deploy  # The folder the action should deploy.
=======
name: Build and Deploy Sphinx Documentation

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Full history for better build context

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libgirepository1.0-dev \
            libgtk-4-dev \
            gir1.2-gtk-4.0 \
            python3-gi \
            python3-gi-cairo

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e .[docs]

      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v4

      - name: Build Sphinx documentation
        run: |
          cd docs
          make clean
          make html SPHINXOPTS="--keep-going -n"

      - name: Create .nojekyll file
        run: touch docs/_build/html/.nojekyll

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: docs/_build/html

  # Deployment job
  deploy:
    if: github.ref == 'refs/heads/main'
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  # Build-only job for PRs (no deployment)
  build-pr:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libgirepository1.0-dev \
            libgtk-4-dev \
            gir1.2-gtk-4.0 \
            python3-gi \
            python3-gi-cairo

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e .[docs]

      - name: Build Sphinx documentation (PR check)
        run: |
          cd docs
          make clean
          make html SPHINXOPTS="--keep-going -n"

      - name: Upload PR documentation artifact
        uses: actions/upload-artifact@v4
        with:
          name: documentation-pr-${{ github.event.number }}
          path: docs/_build/html
          retention-days: 7
>>>>>>> ported/main
